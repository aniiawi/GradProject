<?phprequire_once "dbc.php";function genstring($leng, $getns = false) {	$characters = '0123456789abcdefghijklmnopqrstuvwxyz';	if ($getns) {		$characters .= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';	}	$randstring = '';	for ($i = 0; $i < $leng; $i++) {		$randstring .= $characters[rand(0, strlen($characters) - 1)];	}	return $randstring;}/*function addroom($pdo) {	$stm = $pdo->prepare("INSERT INTO `rooms` () VALUES ()");	$a = $stm->execute();	if ($a) {		return $pdo->lastInsertId("roomid");	} else {		return false;	}}*//*function isloginexist($pdo, $login) {	$stm = $pdo->prepare("SELECT `user_password` FROM `users` WHERE login = :login LIMIT 1");	$stm->bindParam(':login', $login, PDO::PARAM_STR);	$stm->execute();	$a = $stm->fetch();	if (empty($a) || is_null($a) || $a === false) {		return false;	}	return true;}*//*if(isset($_POST['submit']))(    simpleauthpost($pdo);		$stm ='';	$stm = $pdo->prepare("SELECT user_id, user_password, user_hash, user_reg_code FROM 'users' LEFT JOIN 'regist_code' ON 'users'.use_id='regist_code'.user_id	 WHERE  user_login= AND user_password=:pass AND user_hash=:hs AND  user_reg_code=:reg_code LIMIT 1");	 	 	$pass = genstring(9, true);	$stm->bindParam(':pass', $pass);	$stm->bindParam(':login', $login);		$stm->bindParam(':reg_code', $_POST['reg-id']);			$stm->bindParam(':hs', $hs);		return $stm->execute();		*/   // Сравниваем пароли и т.п.   /* if( $stm['user_login'] == $_POST['username'] && $stm['user_password'] == ($_POST['password'] && $stm['user_reg_code'] == $_POST['reg-id'] )	{        print "<p>Пользователь уже зарегистрирован</p>";		return;    }    else    {		adduser($pdo, 'username', 'password', 'reg-id')	}	)*//*function adduser($pdo, $username, $password, $reg_id) {	$login = '';	while (1) {		$login = genstring(6);		if (!isloginexist($pdo, $login)) {			break;		}	}	$stm = $pdo->prepare("INSERT INTO `users` (user_password, user_login, user_hash) VALUES (:pass, :login, :hs)");		$pass = genstring(9, true);	$stm->bindParam(':pass', $pass);	$stm->bindParam(':login', $login);		$stm->bindParam(':hs', $hs);		return $stm->execute();		$stm ='';	$stm = $pdo->prepare("INSERT INTO `regist_code` (user_reg_code) VALUES (:reg_code)");			$stm->bindParam(':reg_code', 'reg-id');	return $stm->execute();	}*//*function adduser($pdo, $roomn, $role = 0) {*//*function adduser($pdo, $roomn, $role = 0) {	$login = '';	while (1) {		$login = genstring(6);		if (!isloginexist($pdo, $login)) {			break;		}	}	/*$stm = $pdo->prepare("INSERT INTO `users` (pass, room, login, role) VALUES (:pass, :room, :login, :role)");*/	/*$stm = $pdo->prepare("INSERT INTO `users` (user_password, user_login, user_hash) VALUES (:pass, :login, :hs)");		$pass = genstring(9, true);	$stm->bindParam(':pass', $pass);	$stm->bindParam(':login', $login);		$stm->bindParam(':hs', $hs);		return $stm->execute();*//*	$stm->bindParam(':room', $roomn, PDO::PARAM_STR);	$stm->bindParam(':role', $role);	return $stm->execute();*/			/*$stm ='';	$stm = $pdo->prepare("INSERT INTO `regist_code` (user_reg_code) VALUES (:reg_code");			$stm->bindParam(':reg_code', $reg_code);	return $stm->execute();	}*/function getuserbyid($pdo, $id) {	$stm = $pdo->prepare("SELECT `users`.*, `role_list`.`role_id`, `role_list`.`role_name`, `group_name`.`group_name`,`user_fio`.`fio` FROM `users` INNER JOIN `user_roles` ON `users`.`user_id` = `user_roles`.`user_id` INNER JOIN `role_list` ON `role_list`.`role_id` = `user_roles`.`user_role` LEFT JOIN `group_name` ON `group_name`.`id` = `users`.`group_id` LEFT JOIN `user_fio` ON `user_fio`.`user_id` = `users`.`user_id` WHERE `users`.`user_id` = :id LIMIT 1");	$stm->bindParam(':id', $id, PDO::PARAM_INT);	$stm->execute();	return $stm->fetch();}function getuserbylogin($pdo, $login) {	$stm = $pdo->prepare("SELECT * FROM `users` WHERE user_login = :login LIMIT 1");	$stm->bindParam(':login', $login, PDO::PARAM_STR);	$stm->execute();	return $stm->fetch();}function setuserhsbyid($pdo, $id, $hs) {	$stm = $pdo->prepare("UPDATE `users` SET  user_hash = :hs WHERE user_id = :id LIMIT 1");	$stm->bindParam(':id', $id, PDO::PARAM_INT);	$stm->bindParam(':hs', $hs, PDO::PARAM_STR);	return $stm->execute();}function getregbycode($pdo, $reg_code){    $stm = $pdo->prepare("SELECT * FROM `regist_code` WHERE `user_reg_code` = :reg_code LIMIT 1");    $stm->bindParam(':reg_code', $reg_code, PDO::PARAM_STR);    $stm->execute();    return $stm->fetch();}function createnewuser($pdo, $login, $pass, $group_id){    $stm = $pdo->prepare("INSERT INTO `users`(`user_id`, `user_login`, `user_password`, `user_hash`, `group_id`) VALUES (null, :login, :pass, null, :group_id)");    $stm->bindParam(':login', $login, PDO::PARAM_STR);    $stm->bindParam(':pass', $pass, PDO::PARAM_STR);    $stm->bindParam(':group_id', $group_id, PDO::PARAM_INT);    $stm->execute();    return $pdo->lastInsertId();}function setuserfio($pdo, $user_id, $fio){    $stm = $pdo->prepare("INSERT INTO `user_fio`(`id`, `user_id`, `fio`) VALUES (null,:user_id,:fio)");    $stm->bindParam(':fio', $fio, PDO::PARAM_STR);    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    return $stm->execute();}function setstudentrole($pdo, $user_id){    $stm = $pdo->prepare("INSERT INTO `user_roles`(`id`, `user_id`, `user_role`) VALUES (null,:user_id,'3')");    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    return $stm->execute();}function deleteregcode($pdo, $code_id){    $stm = $pdo->prepare("DELETE FROM `regist_code` WHERE `id` = :id LIMIT 1");    $stm->bindParam(':id', $code_id, PDO::PARAM_INT);    return $stm->execute();}
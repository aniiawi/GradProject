<?phprequire_once "dbc.php";function genstring($leng, $getns = false) {	$characters = '0123456789abcdefghijklmnopqrstuvwxyz';	if ($getns) {		$characters .= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';	}	$randstring = '';	for ($i = 0; $i < $leng; $i++) {		$randstring .= $characters[rand(0, strlen($characters) - 1)];	}	return $randstring;}function getuserbyid($pdo, $id) {	$stm = $pdo->prepare("SELECT `users`.*, `role_list`.`role_id`, `role_list`.`role_name`, `group_name`.`group_name`,`user_fio`.`fio` FROM `users` INNER JOIN `user_roles` ON `users`.`user_id` = `user_roles`.`user_id` INNER JOIN `role_list` ON `role_list`.`role_id` = `user_roles`.`user_role` LEFT JOIN `group_name` ON `group_name`.`id` = `users`.`group_id` LEFT JOIN `user_fio` ON `user_fio`.`user_id` = `users`.`user_id` WHERE `users`.`user_id` = :id LIMIT 1");	$stm->bindParam(':id', $id, PDO::PARAM_INT);	$stm->execute();	return $stm->fetch();}function getuserbylogin($pdo, $login) {	$stm = $pdo->prepare("SELECT * FROM `users` WHERE user_login = :login LIMIT 1");	$stm->bindParam(':login', $login, PDO::PARAM_STR);	$stm->execute();	return $stm->fetch();}function setuserhsbyid($pdo, $id, $hs) {	$stm = $pdo->prepare("UPDATE `users` SET  user_hash = :hs WHERE user_id = :id LIMIT 1");	$stm->bindParam(':id', $id, PDO::PARAM_INT);	$stm->bindParam(':hs', $hs, PDO::PARAM_STR);	return $stm->execute();}function getregbycode($pdo, $reg_code){    $stm = $pdo->prepare("SELECT * FROM `regist_code` WHERE `user_reg_code` = :reg_code LIMIT 1");    $stm->bindParam(':reg_code', $reg_code, PDO::PARAM_STR);    $stm->execute();    return $stm->fetch();}function createnewuser($pdo, $login, $pass, $group_id){    $stm = $pdo->prepare("INSERT INTO `users`(`user_id`, `user_login`, `user_password`, `user_hash`, `group_id`) VALUES (null, :login, :pass, null, :group_id)");    $stm->bindParam(':login', $login, PDO::PARAM_STR);    $stm->bindParam(':pass', $pass, PDO::PARAM_STR);    $stm->bindParam(':group_id', $group_id, PDO::PARAM_INT);    $stm->execute();    return $pdo->lastInsertId();}function setuserfio($pdo, $user_id, $fio){    $stm = $pdo->prepare("INSERT INTO `user_fio`(`id`, `user_id`, `fio`) VALUES (null,:user_id,:fio)");    $stm->bindParam(':fio', $fio, PDO::PARAM_STR);    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    return $stm->execute();}function setstudentrole($pdo, $user_id){    $stm = $pdo->prepare("INSERT INTO `user_roles`(`id`, `user_id`, `user_role`) VALUES (null,:user_id,'3')");    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    return $stm->execute();}function deleteregcode($pdo, $code_id){    $stm = $pdo->prepare("DELETE FROM `regist_code` WHERE `id` = :id LIMIT 1");    $stm->bindParam(':id', $code_id, PDO::PARAM_INT);    return $stm->execute();}function dbtoarray($pdo, $limit=0) {    $req = "SELECT * FROM `courses`";    if ($limit > 0){        $req = $req." LIMIT :lim";    }    $stm = $pdo->prepare($req);    if ($limit > 0){        $stm->bindParam(':lim', $limit, PDO::PARAM_INT);    }    $stm->execute();    return $stm->fetchAll();}function getAssignedCourses($pdo, $id, $limit=0){    $req = "SELECT `courses`.`course_name`, `courses`.`course_id` FROM ((`users` LEFT JOIN `user_courses` ON `users`.`group_id` = `user_courses`.`group_id`) LEFT JOIN `user_fio` ON `users`.`user_id` = `user_fio`.`user_id`) INNER JOIN `courses` ON `user_courses`.`course_id` = `courses`.`course_id` WHERE `users`.`user_id` = :id";    if ($limit > 0){        $req = $req." LIMIT :lim";    }    $stm = $pdo->prepare($req);    if ($limit > 0){        $stm->bindParam(':lim', $limit, PDO::PARAM_INT);    }    $stm->bindParam(':id', $id, PDO::PARAM_INT);    $stm->execute();    return $stm->fetchAll();}function getAssignedLabs($pdo, $id, $limit=0, $course_id=-1){    $req = "SELECT `labs`.`lab_id`,`labs`.`lab_name`,`labs`.`lab_page` FROM ((`users` LEFT JOIN `user_courses` ON `users`.`group_id` = `user_courses`.`group_id`)LEFT JOIN `user_fio` ON `users`.`user_id` = `user_fio`.`user_id`) INNER JOIN `courses` ON `user_courses`.`course_id` = `courses`.`course_id` LEFT JOIN `labs` ON `courses`.`course_id` = `labs`.`course_id` WHERE `users`.`user_id` = :id";    if ($course_id >= 0){        $req .= " AND `user_courses`.`course_id`=:course_id";    }    if ($limit > 0){        $req .= " LIMIT :lim";    }    $stm = $pdo->prepare($req);    if ($limit > 0){        $stm->bindParam(':lim', $limit, PDO::PARAM_INT);    }    if ($course_id >= 0){        $stm->bindParam(':course_id', $course_id, PDO::PARAM_INT);    }    $stm->bindParam(':id', $id, PDO::PARAM_INT);    $stm->execute();    return $stm->fetchAll();}function getTestByLabId($pdo, $lab_id){    $req = "SELECT * FROM `test` WHERE `lab_id`=:lab_id LIMIT 1";    $stm = $pdo->prepare($req);    $stm->bindParam(':lab_id', $lab_id, PDO::PARAM_INT);    $stm->execute();    return $stm->fetch();}function insertTestResults($pdo, $user_id, $test_id, $correct, $count){    $req = "INSERT INTO `test_result`(`time`, `correct`, `count`, `user_id`, `test_id`) VALUES (CURRENT_TIMESTAMP, :correct, :cnt, :user_id, :test_id)";    $stm = $pdo->prepare($req);    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    $stm->bindParam(':test_id', $test_id, PDO::PARAM_INT);    $stm->bindParam(':correct', $correct, PDO::PARAM_INT);    $stm->bindParam(':cnt', $count, PDO::PARAM_INT);    return $stm->execute();}function getTestResults($pdo, $user_id, $test_id){    $req = "SELECT * FROM `test_result` WHERE `user_id`=:user_id AND `test_id`=:test_id";    $stm = $pdo->prepare($req);    $stm->bindParam(':user_id', $user_id, PDO::PARAM_INT);    $stm->bindParam(':test_id', $test_id, PDO::PARAM_INT);    $stm->execute();    return $stm->fetchAll();}function insertregcode($pdo, $reg_code, $group_id){    $stm = $pdo->prepare("INSERT INTO `regist_code`(`user_reg_code`, `group_id`) VALUES (:reg_code, :group_id)");    $stm->bindParam(':reg_code', $reg_code, PDO::PARAM_STR);    $stm->bindParam(':group_id', $group_id, PDO::PARAM_INT);    return $stm->execute();}